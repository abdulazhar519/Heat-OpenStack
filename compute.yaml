heat_template_version: 2015-10-15

description: Basic Heat template for Chameleon

parameters:
  image_id:
    type: string
    description: Name or ID of the image to launch
    default: CC-Ubuntu14.04
    constraints:
    - custom_constraint: glance.image
  instance_type:
    type: string
    description: Instance type to launch
    default: baremetal
    constraints:
    - custom_constraint: nova.flavor
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: cloud-key-pub
  master:
    type: string
    description: Salt-master location
  network_id:
    type: string
    description: ID of the network to use
    default: 915853fe-10c5-4dac-a402-ef1ebc53e427

  reservation_id:
    type: string
    description: ID of the Blazar reservation to use for launching instances.
    default: 46d62373-472f-4a0c-b706-d06216d17388

resources:
  compute_node:
    type: OS::Nova::Server
    properties:
      name: ComputeNode-Instance
      flavor: { get_param: instance_type }
      image: { get_param: image_id }
      key_name: { get_param: key_name }
      networks:
         - network: { get_param: network_id }
      scheduler_hints: { reservation: { get_param: reservation_id } }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $master_ip$: { get_param: master }
          template: |
            #cloud-config
            users:
              - default
              - name: stack
                lock_passwd: False
                sudo: ["ALL=(ALL) NOPASSWD:ALL\nDefaults:stack !requiretty"]
                shell: /bin/bash
            write_files:
              - content: |
                    #!/bin/bash
                    set -x
                    exec &> >(tee -a /home/stack/postlog.log)
                    sudo apt-get update
                    sudo apt-get install -y git python-pip vim
                    sudo apt-get upgrade -y python
                    touch host
                    sudo sed -e "s/[        ]*127.0.0.1[    ]*localhost[    ]*$/127.0.0.1 localhost $HOSTNAME/" /etc/hosts > host
                    sudo cp -f host /etc/hosts
                    #sudo su -c "useradd stack -s /bin/bash -m -g cc -G cc"
                    #sudo sed -i '$a stack ALL=(ALL) NOPASSWD: ALL' /etc/sudoers
                    sudo chown stack:stack /home/stack
                    cd /home/stack
                    git clone https://github.com/openstack-dev/devstack.git -b stable/liberty
                    sudo chown -R stack:stack /home/stack/*
                    cd devstack
                    SERVICE_HOST=$master_ip$
                    HOST_IP=$(/sbin/ifconfig eth0 | grep 'inet addr' | cut -d: -f2 | awk '{print $1}')
                    #VAR=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')
                    #printf '\nHOST_IP=%s'$VAR'\n' >> local.conf
                    touch interface
                    cat <<EOF | cat > interface
                    auto eth0
                    iface eth0 inet static
                            address $HOST_IP 
                            netmask 255.255.254.0
                            broadcast 10.40.1.255
                            gateway 10.40.1.254
                    EOF
                    #sudo cp -f interface /etc/network/interfaces
                    #sudo ifdown eth0
                    #sudo ifup eth0
                    cat <<EOF | cat > local.conf
                    [[local|localrc]]
                    #credential
                    SERVICE_TOKEN=secret
                    ADMIN_PASSWORD=secret
                    MYSQL_PASSWORD=secret
                    RABBIT_PASSWORD=secret
                    SERVICE_PASSWORD=secret
                    #network
                    FLAT_INTERFACE=eth0
                    FIXED_RANGE=192.168.1.0/24
                    NETWORK_GATEWAY=192.168.1.1
                    FIXED_NETWORK_SIZE=4096
                    HOST_IP=$HOST_IP
                    FLOATING_RANGE=10.40.0.0/23
                    Q_FLOATING_ALLOCATION_POOL="start=10.40.0.2,end=10.40.0.254"
                    PUBLIC_NETWORK_GATEWAY=10.40.1.254
                    #multi_host
                    MULTI_HOST=1
                    SERVICE_HOST=$SERVICE_HOST
                    DATABASE_TYPE=mysql
                    MYSQL_HOST=$SERVICE_HOST
                    RABBIT_HOST=$SERVICE_HOST
                    GLANCE_HOSTPORT=$SERVICE_HOST:9292
                    Q_HOST=$SERVICE_HOST
                    KEYSTONE_AUTH_HOST=$SERVICE_HOST
                    KEYSTONE_SERVICE_HOST=$SERVICE_HOST
                    CINDER_SERVICE_HOST=$SERVICE_HOST
                    NOVA_VNC_ENABLED=True
                    NOVNCPROXY_URL="http://$SERVICE_HOST:6080/vnc_auto.html"
                    VNCSERVER_LISTEN=$HOST_IP
                    VNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP
                    #service
                    ENABLED_SERVICES=n-cpu,n-api,n-api-meta,neutron,q-agt,q-meta
                    Q_PLUGIN=ml2
                    Q_ML2_TENANT_NETWORK_TYPE=vxlan
                    # Enable Logging
                    LOGFILE=/opt/stack/logs/stack.sh.log
                    VERBOSE=True
                    LOG_COLOR=True
                    SCREEN_LOGDIR=/opt/stack/logs
                    EOF
                    touch sysctl.conf
                    sudo sed -e "s/as needed.$/as needed.\n net.ipv4.ip_forward=1\n/" /etc/sysctl.conf >  sysctl.conf
                    sudo sed -e "s/as needed.$/as needed.\n net.ipv4.conf.default.rp.filter=0\n/" sysctl.conf > sysctl.conf
                    sudo sed -e "s/as needed.$/as needed.\n net.ipv4.conf.all.rp.filter=0\n/" sysctl.conf > sysctl.conf
                    sudo cp -f sysctl.conf /etc/sysctl.conf
                    sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
                    sleep 23m
                    ./stack.sh -vvv
                path: /home/stack/start.sh
                permissions: 0755
            runcmd:
              - su -l stack ./start.sh
outputs:
  instance2_ip:
    description: The id address Compute node
value: { get_attr: [compute_node, first_address] }
